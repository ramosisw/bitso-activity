{"version":3,"sources":["Components/AppBarComponent.js","Components/MarketComponent.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBarSpacer","marginTop","spacing","toggleButton","textTransform","root","flexGrow","menuButton","marginRight","title","AppBarComponent","React","useState","_period","setPeriod","classes","className","AppBar","position","Toolbar","Typography","variant","ToggleButtonGroup","value","exclusive","onChange","event","newPeriod","aria-label","ToggleButton","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","MarketComponent","props","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","market","AccordionDetails","books","join","createMuiTheme","palette","type","primary","main","contrastText","secondary","useNextVariants","display","App","_markets","setMarkets","useEffect","fetch","then","res","json","result","bookList","payload","map","i","book","markets","Set","split","toUpperCase","name","filter","includes","toLowerCase","error","ThemeProvider","CssBaseline","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1c96675.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  toggleButton: {\r\n    textTransform: \"none\"\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function AppBarComponent() {\r\n  const [_period, setPeriod] = React.useState(10);\r\n\r\n  const handlePeriod = (event, newPeriod) => {\r\n    setPeriod(newPeriod);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Bitso Activity\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={_period}\r\n            exclusive\r\n            onChange={handlePeriod}\r\n            aria-label=\"time period\"\r\n          >\r\n            <ToggleButton className={classes.toggleButton} value={1} aria-label=\"one second\">\r\n              1s\r\n            </ToggleButton>\r\n            <ToggleButton className={classes.toggleButton} value={5} aria-label=\"five seconds\">\r\n              5s\r\n            </ToggleButton>\r\n            <ToggleButton className={classes.toggleButton} value={10} aria-label=\"ten seconds\">\r\n              10s\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.appBarSpacer} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n}));\r\n\r\nexport default function MarketComponent(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Accordion defaultExpanded  >\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography className={classes.heading}>{props.market}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Typography>\r\n                    {props.books.join(\", \")}\r\n                </Typography>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    );\r\n}\r\n\r\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport AppBarComponent from './Components/AppBarComponent';\nimport MarketComponent from './Components/MarketComponent';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Paper } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// See https://material-ui.com/es/customization/palette/\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: \"#5B764D\",\n      contrastText: \"#F2F2F2\"\n    },\n    secondary: {\n      main: \"#708C5D\",\n      contrastText: \"#F2F2F2\"\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    palette: {\n      primary: \"#F2F2F2\"\n    }\n  },\n  root: {\n    display: 'flex',\n  },\n});\n\nfunction App() {\n  const [_markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.bitso.com/v3/available_books/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let bookList = result\n            .payload\n            .map(i => i.book);\n          let markets = [...new Set(\n            bookList\n              .map(i => i.split(\"_\")[1].toUpperCase())\n          )].map(market => ({\n            name: market,\n            books: bookList.filter(book => book.includes(`_${market.toLowerCase()}`))\n          }));\n          setMarkets(markets);\n        },\n        (error) => {\n          // setIsLoaded(true);\n          // setError(error);\n        }\n      )\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBarComponent />\n      <Container >\n        {_markets.map((market) => (\n          <MarketComponent key={market.name} market={market.name} books={market.books} />\n        ))}\n      </Container>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}